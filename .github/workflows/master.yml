name: Master

on:
  push:
    branches: [ "main", "issue-*" ]

permissions:
  contents: read

jobs:
  test_and_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --ignore-pipfile
      - name: Unit & integrational without YT testing
        run: |
          pipenv run pytest  --verbose -vm unit
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PROXY_SERVERS: ${{ secrets.PROXY_SERVERS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{secrets.DOCKERHUB_USERNAME}}/av-summarizer-py:latest
          secret-envs: openai_api_key=api-key,proxy_servers=

  release:
    runs-on: ubuntu-latest
    needs:
      - test_and_build
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3
      uses: actions/setup-python@v3
      with:
        python-version: "3"
    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        eval "$(ssh-agent -s)"
        echo "${{ secrets.SSH_PASSPHRASE }}" | ssh-add ~/.ssh/id_rsa
        ssh-add -l

        ssh -o StrictHostKeyChecking=no av-summarizer-py@${{ secrets.SSH_HOST }} "echo SSH connection successful; pwd; source ~/deploy.sh"
    - name: Health check
      run: |
        echo "Waiting for 30 seconds before healthcheck"
        sleep 30
        echo "Performing healthcheck..."
        wget --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 10 --http-user=${{secrets.APP_BASIC_USERNAME}} --http-password=${{secrets.APP_BASIC_PASS}} ${{ secrets.APP_URL }}/health -O /dev/null
